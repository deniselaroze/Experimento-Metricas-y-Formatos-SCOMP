x<-35+33+30+30+38+29+31+34
x/9
x<-35+33+30+30+38+38+29+31+34
x/9
sd(x)
var(x)
x<-c(35+33+30+30+38+38+29+31+34)
sd(x)
x<-c(35,33,30,30,38,38,29,31,34)
sd(x)
var(x)
sqrt(11.61111)
109/169
169/109
1/4
library(OpenImageR)
image = readImage("Treat4RPQualtricsIDRP.png")
setwd("~/GitHub/Experimento-Metricas-y-Formatos-SCOMP/Tratamientos")
image = readImage("Treat4RPQualtricsIDRP.png")
rotateImage(image, 75, threads = 1)
r<-rotateImage(image, 75, threads = 1) %>% image_write(paste0("TreatVrotated", 1, QID ,".png"))
writeImage(r, "tmp.png")
r<-rotateImage(image, 75, threads = 1)
writeImage(r, "tmp.png")
r<-rotateImage(image, 120, threads = 1)
writeImage(r, "tmp.png")
r<-rotateImage(image, 90, threads = 1)
writeImage(r, "tmp.png")
r<-rotateImage(image, 270, threads = 1)
writeImage(r, "tmp.png")
r<-rotateImage(image, 270)
writeImage(r, "tmp.png")
crop1 = cropImage(r, new_width = 25, new_height = 30, type = 'equal_spaced')
writeImage(crop1, "tmp.png")
crop1 = cropImage(r, new_width = 250, new_height = 300, type = 'equal_spaced')
writeImage(crop1, "tmp.png")
crop1 = cropImage(r, new_width = 2500, new_height = 3000, type = 'equal_spaced')
writeImage(crop1, "tmp.png")
crop1 = resizeImage(r, new_width = 2500, new_height = 3000, type = 'equal_spaced')
writeImage(crop1, "tmp.png")
crop1 = resizeImage(r, new_width = 2500, new_height = 3000)
crop1 = resizeImage(r, width = 2500, height = 3000)
writeImage(crop1, "tmp.png")
image = readImage("Treat4RPQualtricsIDRP.png")
r<-rotateImage(image, 270)
crop1 = resizeImage(r, width = 2500, height = 4000)
writeImage(crop1, "tmp.png")
image = readImage("Treat4RPQualtricsIDRP.png")
r<-rotateImage(image, 270)
crop1 = resizeImage(r, width = 3000, height = 2500)
writeImage(crop1, "tmp.png")
fcn.treat4 <- function(gender, econ, mode, pair, v){
id<-paste0(gender, econ, ".", mode, ".", pair)
tbl<-all.files[all.files$id==id, c("razon_social", "val_pesos_pension", "VPN")]
tbl$val_pesos_pension<-round( tbl$val_pesos_pension, 0)
opcion <- seq.int(nrow(tbl))
tbl<-cbind(opcion, tbl)
n<-nrow(tbl)
tbl$Company <- factor(tbl$razon_social, levels = tbl$razon_social[order(tbl$opcion)])
max<-max(tbl$VPN, na.rm=T)+1500000
min<-min(tbl$VPN, na.rm=T)-1500000
point <- format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)
title<-if(grepl("1", mode)) {"Renta Vitalicia Inmediata"
} else if(grepl("2", mode))  {"Retiro Programado con Renta Vitalicia Diferida de 2 años"
} else if(grepl("3", mode)) {"Retiro Programado con Renta Vitalicia Diferida de 4 años"
} else {"Retiro Programado"
}
y_labels <- purrr::map2(title, paste0("Valor total estimado a recibir (largo plazo)"),
~ bquote(atop(.(.x), scriptstyle(.(.y))))
)
y_labels <- purrr::invoke(expression, y_labels)
options(scipen=1000)
p<-ggplot(data=tbl, aes(x=Company, y=VPN, fill = Company)) +
geom_bar(stat="identity") +
#geom_text(aes(label=VPE_mensual, vjust=-0.8)) +
scale_fill_manual(values= rev(colorRampPalette(brewer.pal(11, "RdYlGn"))(n))) +
theme(legend.position="") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".",decimal.mark=",",
scientific = FALSE)#,
#                    sec.axis = sec_axis(~./240, name = "Pensión Mensual (pesos)", labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE))
)+
ylab(y_labels)  + xlab("")  +
theme(axis.text.y=element_text(size=15 , angle=90),
axis.title.y=element_text(size=20),
axis.text.x=element_text(size=15, angle=90),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "Grey60", linetype = "dashed"))+
geom_text(aes(label = paste0("$",point(val_pesos_pension)) , angle=90, size = 6, vjust = 0.4, hjust= -0.1)) +
geom_text(aes(label = paste("Opción", tbl$opcion, ":") ), size=5 , angle=90, vjust = 0.4, hjust= 1) +
coord_cartesian(ylim=c(min,max))  #coord_flip() +
return(ggsave(paste0(path, "TreatV", v, QID ,".png"), width=30, height = 30, units = "cm"))
}
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
library(plyr)
library(ggplot2)
theme_set(theme_bw())
library(scales)
library(gridExtra)
library(xtable)
library(RColorBrewer)
library(htmlTable)
#library(gridBase)
library(grid)
library(forcats)
library(pacman)
pacman::p_load(ggplot2, extrafont, scales)
library(purrr)
path<-"~/GitHub/Experimento-Metricas-y-Formatos-SCOMP/Tratamientos/"
load("C:/Users/Profesor/Dropbox/CESS-Santiago/archive/Pensions - JFF/Design info/certificados SP/nuevaBD.RData")
load("C:/Users/Denise Laroze P/Dropbox/CESS-Santiago/archive/Pensions - JFF/Design info/certificados SP/nuevaBD.RData")
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
QID<-"qualtricsID" # to be replaced by a real Qualtrics ID code, unique to each participant
all.files$VPN<-all.files$val_pesos_pension*12*20
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
image = readImage("TreatV1QualtricsID.png")
r<-rotateImage(image, 270)
writeImage(r, "tmp.png")
fcn.treat4 <- function(gender, econ, mode, pair, v){
id<-paste0(gender, econ, ".", mode, ".", pair)
tbl<-all.files[all.files$id==id, c("razon_social", "val_pesos_pension", "VPN")]
tbl$val_pesos_pension<-round( tbl$val_pesos_pension, 0)
opcion <- seq.int(nrow(tbl))
tbl<-cbind(opcion, tbl)
n<-nrow(tbl)
tbl$Company <- factor(tbl$razon_social, levels = tbl$razon_social[order(tbl$opcion)])
max<-max(tbl$VPN, na.rm=T)+1500000
min<-min(tbl$VPN, na.rm=T)-1500000
point <- format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)
title<-if(grepl("1", mode)) {"Renta Vitalicia Inmediata"
} else if(grepl("2", mode))  {"Retiro Programado con Renta Vitalicia Diferida de 2 años"
} else if(grepl("3", mode)) {"Retiro Programado con Renta Vitalicia Diferida de 4 años"
} else {"Retiro Programado"
}
y_labels <- purrr::map2(title, paste0("Valor total estimado a recibir (largo plazo)"),
~ bquote(atop(.(.x), scriptstyle(.(.y))))
)
y_labels <- purrr::invoke(expression, y_labels)
options(scipen=1000)
p<-ggplot(data=tbl, aes(x=Company, y=VPN, fill = Company)) +
geom_bar(stat="identity") +
#geom_text(aes(label=VPE_mensual, vjust=-0.8)) +
scale_fill_manual(values= rev(colorRampPalette(brewer.pal(11, "RdYlGn"))(n))) +
theme(legend.position="") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".",decimal.mark=",",
scientific = FALSE)#,
#                    sec.axis = sec_axis(~./240, name = "Pensión Mensual (pesos)", labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE))
)+
ylab(y_labels)  + xlab("")  +
theme(axis.text.y=element_text(size=15 , angle=90),
axis.title.y=element_text(size=20),
axis.text.x=element_text(size=15, angle=90),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "Grey60", linetype = "dashed"))+
geom_text(aes(label = paste0("$",point(val_pesos_pension)) , angle=90, size = 6, vjust = 0.4, hjust= -0.1)) +
geom_text(aes(label = paste("Opción", tbl$opcion, ":") ), size=5 , angle=90, vjust = 0.4, hjust= 1) +
coord_cartesian(ylim=c(min,max))  #coord_flip() +
ggsave(paste0(path, "TreatV", v, QID ,".png"), width=25, height = 30, units = "cm")
p2 <- readImage(paste0(path, "TreatV", v, QID ,".png"))
return(image_rotate(p2, 270) %>% writeImage(paste0(path, "TreatVRotated", 1, QID ,".png")))
}
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
fcn.treat4 <- function(gender, econ, mode, pair, v){
id<-paste0(gender, econ, ".", mode, ".", pair)
tbl<-all.files[all.files$id==id, c("razon_social", "val_pesos_pension", "VPN")]
tbl$val_pesos_pension<-round( tbl$val_pesos_pension, 0)
opcion <- seq.int(nrow(tbl))
tbl<-cbind(opcion, tbl)
n<-nrow(tbl)
tbl$Company <- factor(tbl$razon_social, levels = tbl$razon_social[order(tbl$opcion)])
max<-max(tbl$VPN, na.rm=T)+1500000
min<-min(tbl$VPN, na.rm=T)-1500000
point <- format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)
title<-if(grepl("1", mode)) {"Renta Vitalicia Inmediata"
} else if(grepl("2", mode))  {"Retiro Programado con Renta Vitalicia Diferida de 2 años"
} else if(grepl("3", mode)) {"Retiro Programado con Renta Vitalicia Diferida de 4 años"
} else {"Retiro Programado"
}
y_labels <- purrr::map2(title, paste0("Valor total estimado a recibir (largo plazo)"),
~ bquote(atop(.(.x), scriptstyle(.(.y))))
)
y_labels <- purrr::invoke(expression, y_labels)
options(scipen=1000)
p<-ggplot(data=tbl, aes(x=Company, y=VPN, fill = Company)) +
geom_bar(stat="identity") +
#geom_text(aes(label=VPE_mensual, vjust=-0.8)) +
scale_fill_manual(values= rev(colorRampPalette(brewer.pal(11, "RdYlGn"))(n))) +
theme(legend.position="") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".",decimal.mark=",",
scientific = FALSE)#,
#                    sec.axis = sec_axis(~./240, name = "Pensión Mensual (pesos)", labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE))
)+
ylab(y_labels)  + xlab("")  +
theme(axis.text.y=element_text(size=15 , angle=90),
axis.title.y=element_text(size=20),
axis.text.x=element_text(size=15, angle=90),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "Grey60", linetype = "dashed"))+
geom_text(aes(label = paste0("$",point(val_pesos_pension)) , angle=90, size = 6, vjust = 0.4, hjust= -0.1)) +
geom_text(aes(label = paste("Opción", tbl$opcion, ":") ), size=5 , angle=90, vjust = 0.4, hjust= 1) +
coord_cartesian(ylim=c(min,max))  #coord_flip() +
ggsave(paste0(path, "TreatV", v, QID ,".png"), width=25, height = 30, units = "cm")
p2 <- readImage(paste0(path, "TreatV", v, QID ,".png"))
return(rotateImage(p2, 270) %>% writeImage(paste0(path, "TreatVRotated", 1, QID ,".png")))
}
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
fcn.treat4 <- function(gender, econ, mode, pair, v){
id<-paste0(gender, econ, ".", mode, ".", pair)
tbl<-all.files[all.files$id==id, c("razon_social", "val_pesos_pension", "VPN")]
tbl$val_pesos_pension<-round( tbl$val_pesos_pension, 0)
opcion <- seq.int(nrow(tbl))
tbl<-cbind(opcion, tbl)
n<-nrow(tbl)
tbl$Company <- factor(tbl$razon_social, levels = tbl$razon_social[order(tbl$opcion)])
max<-max(tbl$VPN, na.rm=T)+1500000
min<-min(tbl$VPN, na.rm=T)-1500000
point <- format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)
title<-if(grepl("1", mode)) {"Renta Vitalicia Inmediata"
} else if(grepl("2", mode))  {"Retiro Programado con Renta Vitalicia Diferida de 2 años"
} else if(grepl("3", mode)) {"Retiro Programado con Renta Vitalicia Diferida de 4 años"
} else {"Retiro Programado"
}
y_labels <- purrr::map2(title, paste0("Valor total estimado a recibir (largo plazo)"),
~ bquote(atop(.(.x), scriptstyle(.(.y))))
)
y_labels <- purrr::invoke(expression, y_labels)
options(scipen=1000)
p<-ggplot(data=tbl, aes(x=Company, y=VPN, fill = Company)) +
geom_bar(stat="identity") +
#geom_text(aes(label=VPE_mensual, vjust=-0.8)) +
scale_fill_manual(values= rev(colorRampPalette(brewer.pal(11, "RdYlGn"))(n))) +
theme(legend.position="") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".",decimal.mark=",",
scientific = FALSE)#,
#                    sec.axis = sec_axis(~./240, name = "Pensión Mensual (pesos)", labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE))
)+
ylab(y_labels)  + xlab("")  +
theme(axis.text.y=element_text(size=15 , angle=90),
axis.title.y=element_text(size=20),
axis.text.x=element_text(size=15, angle=90),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "Grey60", linetype = "dashed"))+
geom_text(aes(label = paste0("$",point(val_pesos_pension)) , angle=90, size = 6, vjust = 0.4, hjust= -0.1)) +
geom_text(aes(label = paste("Opción", tbl$opcion, ":") ), size=5 , angle=90, vjust = 0.4, hjust= 1) +
coord_cartesian(ylim=c(min,max))  #coord_flip() +
ggsave(paste0(path, "TreatV", v, QID ,".png"), width=30, height = 30, units = "cm")
p2 <- readImage(paste0(path, "TreatV", v, QID ,".png"))
return(rotateImage(p2, 270) %>% writeImage(paste0(path, "TreatVRotated", 1, QID ,".png")))
}
fcn.treat4("F", "nivel1", "3a", "co_3a3b", 1 )
